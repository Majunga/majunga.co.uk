<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BotDot</name>
    </assembly>
    <members>
        <member name="T:BotDot.BusinessLogic.Bot.ArguementsHandler">
            <summary>
            Get Arguments from string message
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.ArguementsHandler.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BotDot.BusinessLogic.Bot.ArguementsHandler"/> class.
            </summary>
            <param name="argsStr">Argument String</param>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.ArguementsHandler.CanAction">
            <summary>
            Message is actionable by bot
            </summary>
            <returns>Bool</returns>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.ArguementsHandler.GetCommand">
            <summary>
            Get Command from Arguements
            </summary>
            <returns>Command (Defaults to help if not found)</returns>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.ArguementsHandler.GetDownloadCommandArguements">
            <summary>
            Get Dictionary of Download Arguments and there values
            </summary>
            <returns>Dictionary Download Arguments * Argument Value</returns>
        </member>
        <member name="T:BotDot.BusinessLogic.Bot.BotResponseHandler">
            <summary>
            Response to user
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.BotResponseHandler.#ctor(Microsoft.Bot.Connector.ConnectorClient,Microsoft.Bot.Connector.Activity)">
            <summary>
            Initializes a new instance of the <see cref="T:BotDot.BusinessLogic.Bot.BotResponseHandler"/> class.
            </summary>
            <param name="connector">Connector to User</param>
            <param name="activity">User Activity</param>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.BotResponseHandler.SendMessage(System.String)">
            <summary>
            Send Message to User
            </summary>
            <param name="message">Message to send</param>
            <returns>Task</returns>
        </member>
        <member name="T:BotDot.BusinessLogic.Bot.CommandHandler">
            <summary>
            Command Handler
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.CommandHandler.#ctor(BotDot.BusinessLogic.Services.Interfaces.IYoutubeDownload,BotDot.BusinessLogic.Services.Interfaces.IVideoConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:BotDot.BusinessLogic.Bot.CommandHandler"/> class.
            </summary>
            <param name="download">Downloads files from Internet</param>
            <param name="videoConverter">Video conversion</param>
        </member>
        <member name="T:BotDot.BusinessLogic.Bot.CommandHandler.Commands">
            <summary>
            Commands available
            </summary>
        </member>
        <member name="F:BotDot.BusinessLogic.Bot.CommandHandler.Commands.Download">
            <summary>
            Download Youtube video
            </summary>
        </member>
        <member name="F:BotDot.BusinessLogic.Bot.CommandHandler.Commands.Help">
            <summary>
            Help section
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.CommandHandler.DownloadCommand(BotDot.BusinessLogic.Bot.ArguementsHandler,BotDot.BusinessLogic.Bot.BotResponseHandler)">
            <summary>
            Run actions for Download command
            </summary>
            <param name="args">ArgumentsHandler</param>
            <param name="responses">BotResponseHandler</param>
            <returns>Task</returns>
        </member>
        <member name="T:BotDot.BusinessLogic.Bot.Models.Download">
            <summary>
            Download Model and methods
            </summary>
        </member>
        <member name="T:BotDot.BusinessLogic.Bot.Models.Download.CommandArguements">
            <summary>
            Download Command Arguements
            </summary>
        </member>
        <member name="F:BotDot.BusinessLogic.Bot.Models.Download.CommandArguements.Url">
            <summary>
            Url of file to download, last arguement
            </summary>
        </member>
        <member name="F:BotDot.BusinessLogic.Bot.Models.Download.CommandArguements.Start">
            <summary>
            Time to start video from
            </summary>
        </member>
        <member name="F:BotDot.BusinessLogic.Bot.Models.Download.CommandArguements.End">
            <summary>
            Time to end video from
            </summary>
        </member>
        <member name="P:BotDot.BusinessLogic.Bot.Models.Download.Uri">
            <summary>
            Gets or sets url to use
            </summary>
        </member>
        <member name="P:BotDot.BusinessLogic.Bot.Models.Download.Start">
            <summary>
            Gets or sets start Time
            </summary>
        </member>
        <member name="P:BotDot.BusinessLogic.Bot.Models.Download.End">
            <summary>
            Gets or sets end Time
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Bot.Models.Download.Validate">
            <summary>
            Map values to model and validate
            </summary>
            <returns>Success * Message</returns>
        </member>
        <member name="T:BotDot.BusinessLogic.Services.Interfaces.IVideoConverter">
            <summary>
            Converts video formats
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Services.Interfaces.IVideoConverter.ConvertToMp4(System.IO.FileInfo,System.Tuple{System.String,System.String})">
            <summary>
            Convert any video type to MP4
            </summary>
            <param name="file">File to convert</param>
            <param name="times">Cut file to size</param>
            <returns>Converted video File</returns>
        </member>
        <member name="T:BotDot.BusinessLogic.Services.Interfaces.IYoutubeDownload">
            <summary>
            Downloads files from the internet
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Services.Interfaces.IYoutubeDownload.DownloadVideo(System.Uri)">
            <summary>
            Download YouTube video
            </summary>
            <param name="uri">Uri to the video</param>
            <returns>Task of Downloaded Video file</returns>
        </member>
        <member name="T:BotDot.BusinessLogic.Services.Youtube_Dl">
            <summary>
            Youtube-Dl is used for downloading Youtube videos
            </summary>
        </member>
        <member name="M:BotDot.BusinessLogic.Services.Youtube_Dl.DownloadVideo(System.Uri)">
            <summary>
            Download Video
            </summary>
            <param name="uri">Url to video</param>
            <param name="outputPath">Where file should be downloaded to</param>
            <returns>The FileInfo of downloaded file</returns>
        </member>
        <member name="M:BotDot.BusinessLogic.Services.Youtube_Dl.GetVideoIdFromQueryString(System.Uri)">
            <summary>
            Get the Video Id from the Uri's Query string
            </summary>
            <param name="uri">Uri of website</param>
            <returns>Id of video</returns>
        </member>
        <member name="T:BotDot.Controllers.MessagesController">
            <summary>
            Bot Messages controller
            </summary>
        </member>
        <member name="M:BotDot.Controllers.MessagesController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,BotDot.BusinessLogic.Services.Interfaces.IYoutubeDownload,BotDot.BusinessLogic.Services.Interfaces.IVideoConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:BotDot.Controllers.MessagesController"/> class.
            </summary>
            <param name="configuration">Configuration of Application</param>
            <param name="download">Downloads files from Internet</param>
            <param name="videoConverter">Video conversion</param>
        </member>
        <member name="M:BotDot.Controllers.MessagesController.Post(Microsoft.Bot.Connector.Activity)">
            <summary>
            POST Message method
            </summary>
            <param name="activity">Activatity object</param>
            <returns>Action Result</returns>
        </member>
        <member name="T:BotDot.Helpers.FileHelper">
            <summary>
            Helpers for file related taskss
            </summary>
        </member>
        <member name="M:BotDot.Helpers.FileHelper.CleanUpFile(System.String)">
            <summary>
            Delete files in directory
            </summary>
            <param name="filePattern">Pattern to match with</param>
        </member>
        <member name="M:BotDot.Helpers.FileHelper.DeleteExpiredFile(System.String)">
            <summary>
            Delete files in Directory that are older than 15 mins
            </summary>
            <param name="path">Directory Path</param>
        </member>
        <member name="M:BotDot.Helpers.FileHelper.GetFullPath(System.String)">
            <summary>
            Gets the full path of a Directory or defaults to current Directories full path
            </summary>
            <param name="path">Partial path</param>
            <returns>Full Path</returns>
        </member>
        <member name="T:BotDot.Helpers.ProcessHelper">
            <summary>
            Helper to Run Processes
            </summary>
        </member>
        <member name="M:BotDot.Helpers.ProcessHelper.Run(System.String,System.String)">
            <summary>
            Run Process
            </summary>
            <param name="filename">Name of file to run</param>
            <param name="arguements">Arguments</param>
            <returns>Task</returns>
        </member>
        <member name="T:BotDot.Helpers.Time">
            <summary>
            time Helpers
            </summary>
        </member>
        <member name="M:BotDot.Helpers.Time.Validate(System.String)">
            <summary>
            Validate Time
            </summary>
            <param name="timeStr">String of Time, Expects HH:MM:SS</param>
            <returns>Bool</returns>
        </member>
        <member name="T:BotDot.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:BotDot.Program.Main(System.String[])">
            <summary>
            Entry point of program
            </summary>
            <param name="args">Command Line Args</param>
        </member>
        <member name="M:BotDot.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Creater of Web host
            </summary>
            <param name="args">Cmd line Args</param>
            <returns>Web Host Builder</returns>
        </member>
        <member name="T:BotDot.Startup">
            <summary>
            Web host Start up
            </summary>
        </member>
        <member name="M:BotDot.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:BotDot.Startup"/> class.
            </summary>
            <param name="configuration">Configration of Host</param>
        </member>
        <member name="P:BotDot.Startup.Configuration">
            <summary>
            Gets Configuration
            </summary>
        </member>
        <member name="P:BotDot.Startup.Env">
            <summary>
            Gets Env
            </summary>
        </member>
        <member name="M:BotDot.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">Services Collection</param>
        </member>
        <member name="M:BotDot.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">Application Builder</param>
            <param name="env">Hosting Environment</param>
        </member>
    </members>
</doc>
